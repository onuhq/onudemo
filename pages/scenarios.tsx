import Head from 'next/head'
import Image from 'next/image'
import { useEffect, useState } from 'react';
import styles from '../styles/Home.module.css'
import scriptData from '../onuconfig.json'
import Sidebar from '../components/Sidebar';
import { useRouter } from 'next/router'


interface CommandArg {
  id: string;
  type: string;
  name: string;
  description: string;
  value: string | number;
}
interface Step {
  id: string;
  name: string;
  description: string;
  command: string;
  args: Array<CommandArg>;
}


interface IconProps {
  classes: string;
}

const PlayIcon = ({ classes }: IconProps) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="#FFFFFF" className={classes}>
      <path fillRule="evenodd" d="M4.5 5.653c0-1.426 1.529-2.33 2.779-1.643l11.54 6.348c1.295.712 1.295 2.573 0 3.285L7.28 19.991c-1.25.687-2.779-.217-2.779-1.643V5.653z" clipRule="evenodd" />
    </svg>

  )
}



const makeId = (length: number) => {
  var result = '';
  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
  var charactersLength = characters.length;
  for (var i = 0; i < length; i++) {
    result += characters.charAt(Math.floor(Math.random() * charactersLength));
  }
  return result;
}

interface SavedScenario {
  id: string;
  scenarioName: string;
  stepIds: Array<string>;
}

export default function Scenarios() {
  const [steps, setSteps] = useState<Array<Step>>([]);
  const [savedScenarios, setSavedScenarios] = useState<Array<SavedScenario>>([]);
  const router = useRouter()


  useEffect(() => {
    // add a base value to each script
    const newScripts: Array<Step> = scriptData.scripts.map(script => {
      return {
        id: script.id,
        name: script.name,
        description: script.description,
        command: script.command,
        args: script.args ? script.args.map(arg => { return { id: makeId(6), type: arg.type, description: arg.description, name: arg.name, value: arg.type === "string" ? "" : 0 } }) : []
      }
    })
    setSteps(newScripts);

    let scenarios: string | null | Array<any> = localStorage.getItem('onu-scenarios');
    if (!scenarios) {
      scenarios = []
    } else {
      scenarios = JSON.parse(scenarios)
    }
    // @ts-ignore
    setSavedScenarios(scenarios);
  }, [])



  const runScenario = (id: string) => {
    // Run a saved scenario
    router.push(`/?savedScenario=${id}`)
  }



  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main} style={{ height: '1000px' }}>
        <div className='flex flex-row justify-start w-full h-full'>
          <Sidebar />
          <div className='px-10 pt-10 flex flex-col border-transparent w-full h-full items-start'>
            <p className='text-xl font-medium mb-16'>Saved Scenarios</p>
            {savedScenarios.map((scenario, i) => {
              return (
                <div key={scenario.id} className='w-1/2'>
                  <div className='bg-gray-200 w-full px-5 py-5 rounded-t-lg'>
                    <p className='font-bold text-lg mb-1'>{scenario.scenarioName}</p>
                    <div>
                      {scenario.stepIds.map((stepId, i) => (
                        <p className='font-bold text-gray-600 text-sm mb-1' key={stepId}>{stepId}</p>
                      ))}
                    </div>

                  </div>
                  <div onClick={() => runScenario(scenario.id)} className='px-3 py-2 bg-indigo-400 rounded-b-lg mb-6 flex justify-center text-white font-semibold cursor-pointer'>
                    Load
                  </div>
                </div>
              )
            })}
          </div>


        </div>



      </main >

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div >
  )
}
